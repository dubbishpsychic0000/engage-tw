name: Twitter Bot Continuous Runner

on:
  schedule:
    # Run every hour to ensure the bot stays active
    - cron: '0 * * * *'  # Every hour at minute 0
    
  workflow_dispatch:
    inputs:
      bot_mode:
        description: 'Bot operation mode'
        required: true
        default: 'continuous'
        type: choice
        options:
          - continuous
          - standalone
          - reply
          - quote
          - thread
      duration_hours:
        description: 'How many hours to run (for continuous mode)'
        required: false
        default: '23'
        type: string

jobs:
  twitter-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 1440  # 24 hours max
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip xvfb google-chrome-stable
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install schedule  # Add schedule dependency
    
    - name: Setup Chrome for Selenium
      run: |
        # Download and setup ChromeDriver
        CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+')
        echo "Chrome version: $CHROME_VERSION"
    
    - name: Create environment file
      run: |
        cat > .env << EOF
        TWITTER_API_KEY=${{ secrets.TWITTER_API_KEY }}
        TWITTER_API_SECRET=${{ secrets.TWITTER_API_SECRET }}
        TWITTER_ACCESS_TOKEN=${{ secrets.TWITTER_ACCESS_TOKEN }}
        TWITTER_ACCESS_TOKEN_SECRET=${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
        TWITTER_BEARER_TOKEN=${{ secrets.TWITTER_BEARER_TOKEN }}
        GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
        TWITTER_USERNAME=${{ secrets.TWITTER_USERNAME }}
        TWITTER_PASSWORD=${{ secrets.TWITTER_PASSWORD }}
        TWITTER_EMAIL=${{ secrets.TWITTER_EMAIL }}
        BOT_USERNAME=${{ secrets.BOT_USERNAME }}
        TARGET_ACCOUNTS=${{ secrets.TARGET_ACCOUNTS }}
        EOF
    
    - name: Validate configuration
      run: python -c "from config import validate_config; validate_config()"
    
    - name: Run bot in background with timeout
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          if [ "${{ inputs.bot_mode }}" == "continuous" ]; then
            # Run continuous mode with timeout
            timeout ${{ inputs.duration_hours }}h python main.py continuous || echo "Bot completed scheduled run"
          else
            # Run single mode
            python main.py ${{ inputs.bot_mode }} --topic "AI and machine learning"
          fi
        else
          # Scheduled run - run for 23 hours to avoid overlap
          timeout 23h python main.py continuous || echo "Bot completed scheduled run"
        fi
    
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: bot-logs-${{ github.run_number }}
        path: bot.log
        retention-days: 3
    
    - name: Cleanup
      if: always()
      run: |
        # Clean up any Chrome processes
        pkill -f chrome || true
        pkill -f chromedriver || true
