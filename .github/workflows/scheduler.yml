name: Twitter Bot Advanced Scheduler

on:
  # Tweets autonomes - 4 fois par jour à des heures aléatoires
  schedule:
    # Morning tweets (8h-11h)
    - cron: '15 8 * * *'   # 8h15
    - cron: '45 9 * * *'   # 9h45
    - cron: '30 10 * * *'  # 10h30
    
    # Afternoon tweets (13h-17h)
    - cron: '20 13 * * *'  # 13h20
    - cron: '10 15 * * *'  # 15h10
    - cron: '55 16 * * *'  # 16h55
    
    # Evening tweets (19h-22h)
    - cron: '25 19 * * *'  # 19h25
    - cron: '40 21 * * *'  # 21h40
    
    # Thread quotidien à 15h
    - cron: '0 15 * * *'   # 15h00 exactement
    
    # Engagement - 6 fois par jour
    - cron: '0 9 * * *'    # 9h00
    - cron: '0 10 * * *'   # 10h00
    - cron: '0 11 * * *'   # 11h00
    - cron: '0 12 * * *'   # 12h00
    - cron: '0 18 * * *'   # 18h00
    - cron: '0 21 * * *'   # 21h00

  workflow_dispatch:
    inputs:
      action_type:
        description: 'Type d action à exécuter'
        required: true
        type: choice
        options:
          - standalone
          - thread
          - engage
          - test_all
      topic:
        description: 'Sujet spécifique (optionnel)'
        required: false
        type: string

jobs:
  determine-action:
    runs-on: ubuntu-latest
    outputs:
      action_type: ${{ steps.determine.outputs.action_type }}
      should_run: ${{ steps.determine.outputs.should_run }}
    
    steps:
    - name: Determine action based on schedule
      id: determine
      run: |
        HOUR=$(date -u +%H)
        MINUTE=$(date -u +%M)
        
        echo "Current time: ${HOUR}:${MINUTE} UTC"
        
        # Thread à 15h
        if [ "$HOUR" == "15" ] && [ "$MINUTE" == "00" ]; then
          echo "action_type=thread" >> $GITHUB_OUTPUT
          echo "should_run=true" >> $GITHUB_OUTPUT
        # Engagement aux heures spécifiées
        elif [ "$HOUR" == "09" ] || [ "$HOUR" == "10" ] || [ "$HOUR" == "11" ] || [ "$HOUR" == "12" ] || [ "$HOUR" == "18" ] || [ "$HOUR" == "21" ]; then
          if [ "$MINUTE" == "00" ]; then
            echo "action_type=engage" >> $GITHUB_OUTPUT
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi
        # Tweets autonomes pour les autres heures
        else
          echo "action_type=standalone" >> $GITHUB_OUTPUT
          echo "should_run=true" >> $GITHUB_OUTPUT
        fi
        
        # Pour les exécutions manuelles
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "action_type=${{ inputs.action_type }}" >> $GITHUB_OUTPUT
          echo "should_run=true" >> $GITHUB_OUTPUT
        fi

  run-bot:
    needs: determine-action
    if: needs.determine-action.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create environment file
      run: |
        cat > .env << EOF
        TWITTER_API_KEY=${{ secrets.TWITTER_API_KEY }}
        TWITTER_API_SECRET=${{ secrets.TWITTER_API_SECRET }}
        TWITTER_ACCESS_TOKEN=${{ secrets.TWITTER_ACCESS_TOKEN }}
        TWITTER_ACCESS_TOKEN_SECRET=${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
        TWITTER_BEARER_TOKEN=${{ secrets.TWITTER_BEARER_TOKEN }}
        GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
        TWITTER_USERNAME=${{ secrets.TWITTER_USERNAME }}
        TWITTER_PASSWORD=${{ secrets.TWITTER_PASSWORD }}
        TWITTER_EMAIL=${{ secrets.TWITTER_EMAIL }}
        BOT_USERNAME=${{ secrets.BOT_USERNAME }}
        TARGET_ACCOUNTS=${{ secrets.TARGET_ACCOUNTS }}
        EOF
    
    - name: Install Chrome for engagement
      if: needs.determine-action.outputs.action_type == 'engage'
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip xvfb
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        sleep 3
    
    - name: Run bot action
      env:
        DISPLAY: :99
      run: |
        ACTION_TYPE="${{ needs.determine-action.outputs.action_type }}"
        
        case $ACTION_TYPE in
          "standalone")
            echo "Exécution d'un tweet autonome..."
            if [ -n "${{ inputs.topic }}" ]; then
              python main.py standalone --topic "${{ inputs.topic }}"
            else
              python main.py standalone
            fi
            ;;
          "thread")
            echo "Exécution d'un thread..."
            if [ -n "${{ inputs.topic }}" ]; then
              python main.py thread --topic "${{ inputs.topic }}"
            else
              python main.py thread
            fi
            ;;
          "engage")
            echo "Exécution de l'engagement..."
            python main.py engage
            ;;
          "test_all")
            echo "Test de toutes les fonctionnalités..."
            python main.py test
            ;;
          *)
            echo "Type d'action non reconnu: $ACTION_TYPE"
            exit 1
            ;;
        esac
    
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: bot-logs-${{ needs.determine-action.outputs.action_type }}-${{ github.run_number }}
        path: |
          bot.log
          *.xlsx
        retention-days: 3
        if-no-files-found: ignore
    
    - name: Cleanup
      if: always()
      run: |
        pkill -f chrome || true
        pkill -f chromedriver || true
        pkill -f Xvfb || true
